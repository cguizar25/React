{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/christianguizar/projects/react-complete-guide/nextProject/pages/index.js\";\nimport { MongoClient } from 'mongodb';\nimport MeetupList from '../components/meetups/MeetupList';\n\nconst HomePage = props => {\n  return /*#__PURE__*/_jsxDEV(MeetupList, {\n    meetups: props.meetups\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 10\n  }, this);\n}; // //Runs on the Server AFTER deployment, guaranteed to run after every request\n// export const getServerSideProps = async (context) => {\n//   const req = context.req;\n//   const res = context.res;\n//\n//   //fetch data from an API\n//   return {\n//     props: {\n//       meetups: DUMMY_MEETUPS\n//     }\n//   };\n// };\n//Runs DURING the build Process\n\n\nexport const getStaticProps = async () => {\n  const client = await MongoClient.connect('mongodb+srv://cguizar525:Pokemon10@cluster0.bthpq.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const meetups = await meetupsCollection.find().toArray();\n  client.close();\n  return {\n    props: {\n      meetups: meetups.map(meetup => ({\n        title: meetup.title,\n        address: meetup.address,\n        image: meetup.image,\n        id: meetp._id.toString()\n      }))\n    },\n    revalidate: 1\n  };\n};\nexport default HomePage;","map":{"version":3,"sources":["/Users/christianguizar/projects/react-complete-guide/nextProject/pages/index.js"],"names":["MongoClient","MeetupList","HomePage","props","meetups","getStaticProps","client","connect","db","meetupsCollection","collection","find","toArray","close","map","meetup","title","address","image","id","meetp","_id","toString","revalidate"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,SAA5B;AAEA,OAAOC,UAAP,MAAuB,kCAAvB;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAC1B,sBAAO,QAAC,UAAD;AAAY,IAAA,OAAO,EAAEA,KAAK,CAACC;AAA3B;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAFD,C,CAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;AACA,OAAO,MAAMC,cAAc,GAAG,YAAY;AAExC,QAAMC,MAAM,GAAG,MAAMN,WAAW,CAACO,OAAZ,CAAoB,mGAApB,CAArB;AACA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMN,OAAO,GAAG,MAAMK,iBAAiB,CAACE,IAAlB,GAAyBC,OAAzB,EAAtB;AAEAN,EAAAA,MAAM,CAACO,KAAP;AAEA,SAAO;AACLV,IAAAA,KAAK,EAAE;AACLC,MAAAA,OAAO,EAAEA,OAAO,CAACU,GAAR,CAAYC,MAAM,KAAI;AAC7BC,QAAAA,KAAK,EAAED,MAAM,CAACC,KADe;AAE7BC,QAAAA,OAAO,EAAEF,MAAM,CAACE,OAFa;AAG7BC,QAAAA,KAAK,EAAEH,MAAM,CAACG,KAHe;AAI7BC,QAAAA,EAAE,EAAEC,KAAK,CAACC,GAAN,CAAUC,QAAV;AAJyB,OAAJ,CAAlB;AADJ,KADF;AASLC,IAAAA,UAAU,EAAE;AATP,GAAP;AAWD,CAtBM;AAwBP,eAAerB,QAAf","sourcesContent":["import { MongoClient } from 'mongodb';\n\nimport MeetupList from '../components/meetups/MeetupList';\n\nconst HomePage = (props) => {\n  return <MeetupList meetups={props.meetups} />;\n}\n\n// //Runs on the Server AFTER deployment, guaranteed to run after every request\n// export const getServerSideProps = async (context) => {\n//   const req = context.req;\n//   const res = context.res;\n//\n//   //fetch data from an API\n//   return {\n//     props: {\n//       meetups: DUMMY_MEETUPS\n//     }\n//   };\n// };\n\n//Runs DURING the build Process\nexport const getStaticProps = async () => {\n\n  const client = await MongoClient.connect('mongodb+srv://cguizar525:Pokemon10@cluster0.bthpq.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db();\n\n  const meetupsCollection = db.collection('meetups');\n\n  const meetups = await meetupsCollection.find().toArray();\n\n  client.close();\n\n  return {\n    props: {\n      meetups: meetups.map(meetup=> ({\n        title: meetup.title,\n        address: meetup.address,\n        image: meetup.image,\n        id: meetp._id.toString(),\n      }))\n    },\n    revalidate: 1\n  };\n}\n\nexport default HomePage;\n"]},"metadata":{},"sourceType":"module"}